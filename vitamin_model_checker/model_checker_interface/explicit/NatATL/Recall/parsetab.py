
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND CHOICE CONCAT IMPLIES LPAREN NOT OR PROP RPAREN STARexpression : expression AND expression\n| expression OR expression\n| expression IMPLIES expression\n| expression CONCAT expression\n| expression CHOICE expressionexpression : NOT expression\n| expression STARexpression : LPAREN expression RPARENexpression : PROP'
    
_lr_action_items = {'NOT':([0,2,3,5,6,7,8,9,],[2,2,2,2,2,2,2,2,]),'LPAREN':([0,2,3,5,6,7,8,9,],[3,3,3,3,3,3,3,3,]),'PROP':([0,2,3,5,6,7,8,9,],[4,4,4,4,4,4,4,4,]),'$end':([1,4,10,11,13,14,15,16,17,18,],[0,-9,-7,-6,-1,-2,-3,-4,-5,-8,]),'AND':([1,4,10,11,12,13,14,15,16,17,18,],[5,-9,-7,5,5,5,5,5,5,5,-8,]),'OR':([1,4,10,11,12,13,14,15,16,17,18,],[6,-9,-7,6,6,6,6,6,6,6,-8,]),'IMPLIES':([1,4,10,11,12,13,14,15,16,17,18,],[7,-9,-7,7,7,7,7,7,7,7,-8,]),'CONCAT':([1,4,10,11,12,13,14,15,16,17,18,],[8,-9,-7,8,8,8,8,8,8,8,-8,]),'CHOICE':([1,4,10,11,12,13,14,15,16,17,18,],[9,-9,-7,9,9,9,9,9,9,9,-8,]),'STAR':([1,4,10,11,12,13,14,15,16,17,18,],[10,-9,-7,10,10,10,10,10,10,10,-8,]),'RPAREN':([4,10,11,12,13,14,15,16,17,18,],[-9,-7,-6,18,-1,-2,-3,-4,-5,-8,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expression':([0,2,3,5,6,7,8,9,],[1,11,12,13,14,15,16,17,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> expression","S'",1,None,None,None),
  ('expression -> expression AND expression','expression',3,'p_expression_binary','regexParser.py',39),
  ('expression -> expression OR expression','expression',3,'p_expression_binary','regexParser.py',40),
  ('expression -> expression IMPLIES expression','expression',3,'p_expression_binary','regexParser.py',41),
  ('expression -> expression CONCAT expression','expression',3,'p_expression_binary','regexParser.py',42),
  ('expression -> expression CHOICE expression','expression',3,'p_expression_binary','regexParser.py',43),
  ('expression -> NOT expression','expression',2,'p_expression_unary','regexParser.py',47),
  ('expression -> expression STAR','expression',2,'p_expression_unary','regexParser.py',48),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','regexParser.py',52),
  ('expression -> PROP','expression',1,'p_expression_prop','regexParser.py',56),
]
